# change prefix to CTRL-; for ease of use
# set -g prefix 'C-\;'

# https://mutelight.org/practical-tmux
# fast command sequences
set -s escape-time 0

# https://wiki.archlinux.org/index.php/tmux#Other_Settings
set -g history-limit 10000

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v '#{pane_current_path}'
bind v split-window -h '#{pane_current_path}'

# move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R
# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind-key < resize-pane -L 1
bind-key > resize-pane -R 1
bind-key - resize-pane -D 1
bind-key + resize-pane -U 1

#resize upcase style
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# bind : to command-prompt like vim
# this is the default in tmux already
bind-key : command-prompt

# powerline configuration
source ~/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline-base.conf
source ~/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf
set -g default-terminal "screen-256color"

# change bar color to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
set -g status-left-length 20

bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind c new-window -c '#{pane_current_path}'

# reindex based on keyboard and open sequence
set -g base-index 1
set -g renumber-windows on

# move pane to new window
bind b break-pane -d

# choose session
bind C-a choose-tree


# vi-style controls for copy mode
setw -g mode-keys vi

# system clipboard
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"


# tmux navigator

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
